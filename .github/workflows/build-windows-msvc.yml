# SPDX-FileCopyrightText: 2015-2023 Alexey Rochev
#
# SPDX-License-Identifier: CC0-1.0

name: Build Tremotesf for Windows

on:
  workflow_call:
    inputs:
      build-for-release:
        description: Build for release tag
        type: string
        required: false
        default: ''

jobs:
  build-windows-msvc:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up MSVC environment
      uses: equeim/action-setup-msvc-environment@v1

    - name: Set VCPKG_ROOT environment variable
      run: |
        echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" >> '${{ github.env }}'

    - name: Set up vcpkg
      uses: equeim/action-setup-vcpkg@v5
      with:
        run-install: true
        install-root: C:\vcpkg_installed
        triplet: x64-windows-static
        host-triplet: x64-windows-static
        overlay-triplets-path: ${{ github.workspace }}\src\libtremotesf\vcpkg-windows-overlay-triplets
        binary-cache-path: C:\vcpkg_binary_cache
        save-cache: ${{ github.event_name != 'pull_request' }}

    # We don't use matrix here because we want for vcpkg to install dependencies only once

    - name: Build Tremotesf with MSVC toolchain
      id: build
      uses: equeim/action-cmake-build@v9
      with:
        cmake-arguments: --preset windows-msvc-vcpkg -D VCPKG_MANIFEST_INSTALL=OFF -D VCPKG_INSTALLED_DIR=C:\vcpkg_installed
        package: true

    - name: Build Tremotesf with MSVC + Clang toolchain
      if: inputs.build-for-release == ''
      uses: equeim/action-cmake-build@v9
      with:
        cmake-arguments: --preset windows-msvc-clang-vcpkg -D VCPKG_MANIFEST_INSTALL=OFF -D VCPKG_INSTALLED_DIR=C:\vcpkg_installed
        output-directories-suffix: -clang

    - name: Archive debug packages
      if: inputs.build-for-release == ''
      uses: actions/upload-artifact@v3
      with:
        name: tremotesf-win64-debug
        retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}
        path: |
          ${{ steps.build.outputs.build-directory-debug }}\windows-packaging\*.zip
          ${{ steps.build.outputs.build-directory-debug }}\windows-packaging\*.msi

    - name: Archive release packages
      if: inputs.build-for-release == ''
      uses: actions/upload-artifact@v3
      with:
        name: tremotesf-win64-release
        retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}
        path: |
          ${{ steps.build.outputs.build-directory-release }}\windows-packaging\*.zip
          ${{ steps.build.outputs.build-directory-release }}\windows-packaging\*.msi

    - name: Upload packages to release
      if: inputs.build-for-release != ''
      run: |
        $packages = Get-ChildItem ${{ steps.build.outputs.build-directory-debug }}\windows-packaging\*.zip, ${{ steps.build.outputs.build-directory-debug }}\windows-packaging\*.msi, ${{ steps.build.outputs.build-directory-release }}\windows-packaging\*.zip, ${{ steps.build.outputs.build-directory-release }}\windows-packaging\*.msi
        echo "Uploading packages $packages"
        gh release upload '${{ inputs.build-for-release }}' $packages
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive vcpkg logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: vcpkg-logs
        retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}
        path: ${{ env.VCPKG_ROOT }}\buildtrees\*\*.log

    - name: Archive build logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: build-logs
        retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}
        path: |
          ${{ github.workspace }}\build-*\*.log
          ${{ github.workspace }}\build-*\**\*.log
